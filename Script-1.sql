--=============== МОДУЛЬ 4. УГЛУБЛЕНИЕ В SQL =======================================
--= ПОМНИТЕ, ЧТО НЕОБХОДИМО УСТАНОВИТЬ ВЕРНОЕ СОЕДИНЕНИЕ И ВЫБРАТЬ СХЕМУ PUBLIC===========
SET search_path TO public;

--======== ОСНОВНАЯ ЧАСТЬ ==============

--ЗАДАНИЕ №1
--База данных: если подключение к облачной базе, то создаёте новую схему с префиксом в --виде фамилии, название должно быть на латинице в нижнем регистре и таблицы создаете --в этой новой схеме, если подключение к локальному серверу, то создаёте новую схему и --в ней создаёте таблицы.

--Спроектируйте базу данных, содержащую три справочника:
--· язык (английский, французский и т. п.);
--· народность (славяне, англосаксы и т. п.);
--· страны (Россия, Германия и т. п.).
--Две таблицы со связями: язык-народность и народность-страна, отношения многие ко многим. Пример таблицы со связями — film_actor.
--Требования к таблицам-справочникам:
--· наличие ограничений первичных ключей.
--· идентификатору сущности должен присваиваться автоинкрементом;
--· наименования сущностей не должны содержать null-значения, не должны допускаться --дубликаты в названиях сущностей.
--Требования к таблицам со связями:
--· наличие ограничений первичных и внешних ключей.

--В качестве ответа на задание пришлите запросы создания таблиц и запросы по --добавлению в каждую таблицу по 5 строк с данными.
 
--СОЗДАНИЕ ТАБЛИЦЫ ЯЗЫКИ

create table language (
	lang_id serial primary key,
	lang_name varchar(50) unique not null
	)


--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ ЯЗЫКИ

insert into language(lang_name)
values ('английский'), ('фразцузский'), ('русский'), ('немецкий'), ('испанский')


--СОЗДАНИЕ ТАБЛИЦЫ НАРОДНОСТИ

create table nationality (
	nation_id serial primary key,
	nation_name varchar(50) unique not null
	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ НАРОДНОСТИ

insert into nationality(nation_name)
values ('сенегалец'), ('россиянин'), ('англичанин'), ('француз'), ('немец'), ('австриец'), ('испанец'), ('каталонец')

--СОЗДАНИЕ ТАБЛИЦЫ СТРАНЫ

create table country (
	country_id serial primary key,
	country_name varchar(50) unique not null
	)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СТРАНЫ

insert into country(country_name)
values ('Великобритания'), ('Франция'), ('РФ'), ('Германия'), ('Испания') 

--СОЗДАНИЕ ПЕРВОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

create table lang_nation (
	lang_id int not null references language(lang_id),
	nation_id int not null references nationality(nation_id),
primary key (lang_id, nation_id)
)


--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

insert into lang_nation(lang_id, nation_id)
values ('1', '3'), ('2', '1'), ('2', '4'), ('3', '2'), ('4', '5'), ('4', '6'), ('5', '7'), ('5', '8')


--СОЗДАНИЕ ВТОРОЙ ТАБЛИЦЫ СО СВЯЗЯМИ

create table nation_country (
	nation_id int not null references nationality(nation_id),
	country_id int not null references country(country_id),
primary key (nation_id, country_id)
)

--ВНЕСЕНИЕ ДАННЫХ В ТАБЛИЦУ СО СВЯЗЯМИ

insert into nation_country(nation_id, country_id)
values ('2', '3'), ('3', '1'), ('4', '2'), ('5', '4'), ('7', '5'), ('8', '5') 
